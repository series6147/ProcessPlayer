{
	Children: [
	{
		Blank: {
		ID: "start",
		OnExecuteStarted: "//initialization
globals['operator1']='';
globals['operator2']='';
globals['number1']=null;
globals['number2']=null;",
		OutgoingIDs: ["console.selector"]
		}
	},
	{
		Decision: {
		ID: "console.selector",
		Condition: "if (this.IsConsole)
{
	Console.WriteLine('enter number or operator.');
	var text = Console.ReadLine();
	if (isNumeric(text))
	{
		this.setInput({ 'console.selector': [value(text)] });
		return ['number'];
	}
	else
	{
		switch (text)
		{
		case '':
		case '/':
		case '*':
		case '-':
		case '+':
		{
			this.setInput({ 'console.selector': [text] });
			return ['operator'];
		}
			break;
		case 'c':
		case 'C':
			return ['reset'];
			break;
		}
	}
	return ['console.selector'];
}",
		OutgoingIDs: ["console.selector","end","number","operator","reset"],
		TriggerMode: 1
		}
	},
	{
		Decision: {
		Condition: "var values = this.getInput()['console.selector'];
if (values != null && values.Length)
{
	globals['number1']=values[0].Data;
	globals['operator2']=globals['operator1'];
	this.msg(toString(globals['number2']) + ' ' + globals['operator2']);
	if (globals['number2'] != null && globals['operator2'] != '')
	{
		return ['calculator'];
	}
	else
	{
		return ['console.selector'];
	}
}",
		ID: "number",
		OutgoingIDs: ["console.selector"]
		}
	},
	{
		Decision: {
		Condition: "var values = this.getInput()['console.selector'];
if (values != null && values.Length)
{
	globals['number2']=globals['number1'];
	globals['operator1']=values[0].Data;
	this.msg(toString(globals['number2']) + ' ' + globals['operator1']);
	if (globals['number2'] != null && globals['operator2'] != '')
	{
		return ['calculator'];
	}
	else
	{
		return ['console.selector'];
	}
}",
		ID: "operator",
		OutgoingIDs: ["console.selector"]
		}
	},
	{
		Blank: {
		ID: "calculator",
		OnExecuteStarted: "switch (globals['operator2'])
{
	case '/':
	{
		globals['number1']=globals['number2']/globals['number1'];
	}
		break;
	case '*':
	{
		globals['number1']=globals['number2']*globals['number1'];
	}
		break;
	case '-':
	{
		globals['number1']=globals['number2']-globals['number1'];
	}
		break;
	case '+':
	{
		globals['number1']=globals['number2']+globals['number1'];
	}
		break;
}
this.msg('= ' + globals['number1']);
"
		}
	},
	{
		Blank: {
		ID: "reset",
		OnExecuteStarted: "//reset
globals['operator1']='';
globals['operator2']='';
globals['number1']=null;
globals['number2']=null;",
		OutgoingIDs: ["console.selector"]
		}
	},
	{
		Blank: {
		ID: "end"
		}
	}
	]
}